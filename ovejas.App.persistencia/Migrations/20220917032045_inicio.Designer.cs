// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ovejas.App.persistencia;

#nullable disable

namespace ovejas.App.persistencia.Migrations
{
    [DbContext(typeof(AppContext))]
    [Migration("20220917032045_inicio")]
    partial class inicio
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ovejas.App.dominio.cuidadoOvino", b =>
                {
                    b.Property<int>("cuidadoOvinoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("cuidadoOvinoId"), 1L, 1);

                    b.Property<string>("Nit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("cuidadoOvinoId");

                    b.ToTable("cuidadoOvinos");
                });

            modelBuilder.Entity("ovejas.App.dominio.dueñoOveja", b =>
                {
                    b.Property<int>("dueñoOvejaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("dueñoOvejaId"), 1L, 1);

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Documento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ovejasId")
                        .HasColumnType("int");

                    b.HasKey("dueñoOvejaId");

                    b.HasIndex("ovejasId");

                    b.ToTable("dueñoOveja");
                });

            modelBuilder.Entity("ovejas.App.dominio.historiaClinica", b =>
                {
                    b.Property<int>("historiaClinicaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("historiaClinicaId"), 1L, 1);

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FechaAperturaHistoría")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreDueño")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreMedico")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("historiaClinicaId");

                    b.ToTable("historiasClinicas");
                });

            modelBuilder.Entity("ovejas.App.dominio.medicoVeterinario", b =>
                {
                    b.Property<int>("medicoVeterinarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("medicoVeterinarioId"), 1L, 1);

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Documento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TarjetaProfesional")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("medicoVeterinarioId");

                    b.ToTable("medicosVeterinarios");
                });

            modelBuilder.Entity("ovejas.App.dominio.oveja", b =>
                {
                    b.Property<int>("ovejasId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ovejasId"), 1L, 1);

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Especie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreMedicoVeterinario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Raza")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ovejasId");

                    b.ToTable("ovejas");
                });

            modelBuilder.Entity("ovejas.App.dominio.visitaDomiciliaria", b =>
                {
                    b.Property<int>("visitasDomiciliariasId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("visitasDomiciliariasId"), 1L, 1);

                    b.Property<string>("DocumentoVeterinario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EstadoAnimo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FechaVisita")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("FrecuenciaCardiaca")
                        .HasColumnType("real");

                    b.Property<float>("FrecuenciaRespiratoria")
                        .HasColumnType("real");

                    b.Property<string>("MedicinasFormuladas")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Peso")
                        .HasColumnType("real");

                    b.Property<float>("Temperatura")
                        .HasColumnType("real");

                    b.Property<int>("medicoVeterinarioId")
                        .HasColumnType("int");

                    b.HasKey("visitasDomiciliariasId");

                    b.HasIndex("medicoVeterinarioId");

                    b.ToTable("visitasDomiciliarias");
                });

            modelBuilder.Entity("ovejas.App.dominio.dueñoOveja", b =>
                {
                    b.HasOne("ovejas.App.dominio.oveja", "oveja")
                        .WithMany()
                        .HasForeignKey("ovejasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("oveja");
                });

            modelBuilder.Entity("ovejas.App.dominio.visitaDomiciliaria", b =>
                {
                    b.HasOne("ovejas.App.dominio.medicoVeterinario", "medicoVeterinario")
                        .WithMany()
                        .HasForeignKey("medicoVeterinarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("medicoVeterinario");
                });
#pragma warning restore 612, 618
        }
    }
}
